{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "(vial.r*2+2)*mult.i+2",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "(vial.r*2+2)*mult.j+2",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "16",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.25",
                    "name": "r",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiiiiiiiiiiiiam__f1aa-f-26.8X-Xf26.8a-f-26.8Y-Yf26.8a-f-8Z-Zf8am__f1iaa-f-28.8X-Xf28.8a-f-26.8Y-Yf26.8aa-f-26.8X-Xf26.8a-f-28.8Y-Yf28.8a-f-6Z-Zf6-r++q-Xf26.8q-Yf26.8q-Zf6f2-r++q-Xf-26.8q-Yf26.8q-Zf6f2-r++q-Xf26.8q-Yf-26.8q-Zf6f2-r++q-Xf-26.8q-Yf-26.8q-Zf6f2-r++q-Xf26.8q-Yf26.8q-Zf-6f2-r++q-Xf-26.8q-Yf26.8q-Zf-6f2-r++q-Xf26.8q-Yf-26.8q-Zf-6f2-r++q-Xf-26.8q-Yf-26.8q-Zf-6f2am__f1-r+q-Xf26.8q-Yf26.8f2a-f-6Z-Zf6a-r+q-Yf26.8q-Zf6f2a-f-26.8X-Xf26.8a-r+q-Xf26.8q-Zf6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf-26.8q-Yf26.8f2a-f-6Z-Zf6a-r+q-Yf-26.8q-Zf6f2a-f-26.8X-Xf26.8a-r+q-Xf-26.8q-Zf6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf26.8q-Yf-26.8f2a-f-6Z-Zf6a-r+q-Yf26.8q-Zf-6f2a-f-26.8X-Xf26.8a-r+q-Xf26.8q-Zf-6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf-26.8q-Yf-26.8f2a-f-6Z-Zf6a-r+q-Yf-26.8q-Zf-6f2a-f-26.8X-Xf26.8a-r+q-Xf-26.8q-Zf-6f2a-f-26.8Y-Yf26.8',float('-28.799999'),float('-28.799999'),float('-8.000000'),float('28.799999'),float('28.799999'),float('8.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                -415,
                -265
            ],
            "name": "base",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "",
                "import fab",
                "",
                "title('Rounded cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "input('r', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "# This is the circle's radius in actual units (not a 0-1 fraction)",
                "r_ = r * min([width, height, depth])/2",
                "",
                "output('shape', fab.shapes.rounded_cube(xmin, xmax, ymin, ymax, zmin, zmax, r))",
                "",
                "def drag_hwd(this, dx, dy, dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "# UI",
                "def drag_r(this, x, y, z):",
                "    if abs(this.width) < abs(this.height):",
                "        d = abs(this.width)",
                "        mid = this.ymax + this.height/2 - d / 2",
                "    else:",
                "        d = abs(this.height)",
                "        mid = this.y",
                "    r = 1 - (y - mid) / (d/2)",
                "    this.r = float(min(1, max(0, r)))",
                "",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2, y + height/2, z + depth/2, drag=drag_hwd)",
                "sb.ui.point(xmax, ymax - r_, zmax, drag=drag_r, relative=False)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__7]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__2.__6,__4.__7]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-26.8X-Xf26.8a-f-26.8Y-Yf26.8a-f-8Z-Zf8am__f1iaa-f-28.8X-Xf28.8a-f-26.8Y-Yf26.8aa-f-26.8X-Xf26.8a-f-28.8Y-Yf28.8a-f-6Z-Zf6-r++q-Xf26.8q-Yf26.8q-Zf6f2-r++q-Xf-26.8q-Yf26.8q-Zf6f2-r++q-Xf26.8q-Yf-26.8q-Zf6f2-r++q-Xf-26.8q-Yf-26.8q-Zf6f2-r++q-Xf26.8q-Yf26.8q-Zf-6f2-r++q-Xf-26.8q-Yf26.8q-Zf-6f2-r++q-Xf26.8q-Yf-26.8q-Zf-6f2-r++q-Xf-26.8q-Yf-26.8q-Zf-6f2am__f1-r+q-Xf26.8q-Yf26.8f2a-f-6Z-Zf6a-r+q-Yf26.8q-Zf6f2a-f-26.8X-Xf26.8a-r+q-Xf26.8q-Zf6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf-26.8q-Yf26.8f2a-f-6Z-Zf6a-r+q-Yf-26.8q-Zf6f2a-f-26.8X-Xf26.8a-r+q-Xf-26.8q-Zf6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf26.8q-Yf-26.8f2a-f-6Z-Zf6a-r+q-Yf26.8q-Zf-6f2a-f-26.8X-Xf26.8a-r+q-Xf26.8q-Zf-6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf-26.8q-Yf-26.8f2a-f-6Z-Zf6a-r+q-Yf-26.8q-Zf-6f2a-f-26.8X-Xf26.8a-r+q-Xf-26.8q-Zf-6f2a-f-26.8Y-Yf26.8niam__f1aa-f-28.8X-Xf28.8a-f-28.8Y-Yf28.8a-f0Z-Zf8m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf13.9-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf27.8-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf41.7-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20',float('-28.799999'),float('-28.799999'),float('-8.000000'),float('28.799999'),float('28.799999'),float('8.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                951.341605339446,
                49.53348373344447
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "base.z+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "base.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "base.height",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "base.depth/2",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f-28.8X-Xf28.8a-f-28.8Y-Yf28.8a-f0Z-Zf8',float('-28.799999'),float('-28.799999'),float('0.000000'),float('28.799999'),float('28.799999'),float('8.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                2,
                183
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "base.x-base.width/2+self.r+2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "base.y-base.height/2+self.r+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "-7",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "11.9/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1',float('-26.799999'),float('-26.799999'),float('-7.000000'),float('-14.900000'),float('-14.900000'),float('1.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -46,
                765
            ],
            "name": "vial",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__3.__5,__5.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "4",
                    "name": "i",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "4",
                    "name": "j",
                    "type": "int",
                    "uid": 4
                },
                {
                    "expr": "vial.r*2+2",
                    "name": "dx",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "self.dx",
                    "name": "dy",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf13.9-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf27.8-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf41.7-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20',float('-26.799999'),float('-26.799999'),float('-20.000000'),float('26.800001'),float('26.800001'),float('20.000000'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 7
                }
            ],
            "inspector": [
                437,
                805
            ],
            "name": "mult",
            "script": [
                "import fab",
                "",
                "title('Array (2D)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('_x', float)",
                "input('_y', float)",
                "input('i', int)",
                "input('j', int)",
                "input('dx', float)",
                "input('dy', float)",
                "",
                "output('array', fab.shapes.iterate3d(shape, i, j, 1, dx, dy, 0))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (_x + dx, _y, 0), (_x, _y, 0), (_x, _y + dy, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + dx, _y - 0.3, 0), (_x + dx, _y + 0.3, 0)], color=sb.color.teal)",
                "sb.ui.wireframe([",
                "    (_x + 0.3, _y + dy, 0), (_x - 0.3, _y + dy, 0)], color=sb.color.teal)",
                "",
                "sb.ui.point(_x, _y, 0, color=sb.color.teal)",
                "sb.ui.point(_x + dx, _y, 0, color=sb.color.teal, drag=(dx, None, None))",
                "sb.ui.point(_x, _y + dy, 0, color=sb.color.teal, drag=(None, dy, None))",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "vial.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "vial.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "-20",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "20",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20',float('-21.850000'),float('-21.850000'),float('-20.000000'),float('-19.850000'),float('-19.850000'),float('20.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -58.98750890728904,
                1300.8852410803922
            ],
            "name": "relief",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiiiiiiiiiiiiiiam__f1aa-f-26.8X-Xf26.8a-f-26.8Y-Yf26.8a-f-8Z-Zf8am__f1iaa-f-28.8X-Xf28.8a-f-26.8Y-Yf26.8aa-f-26.8X-Xf26.8a-f-28.8Y-Yf28.8a-f-6Z-Zf6-r++q-Xf26.8q-Yf26.8q-Zf6f2-r++q-Xf-26.8q-Yf26.8q-Zf6f2-r++q-Xf26.8q-Yf-26.8q-Zf6f2-r++q-Xf-26.8q-Yf-26.8q-Zf6f2-r++q-Xf26.8q-Yf26.8q-Zf-6f2-r++q-Xf-26.8q-Yf26.8q-Zf-6f2-r++q-Xf26.8q-Yf-26.8q-Zf-6f2-r++q-Xf-26.8q-Yf-26.8q-Zf-6f2am__f1-r+q-Xf26.8q-Yf26.8f2a-f-6Z-Zf6a-r+q-Yf26.8q-Zf6f2a-f-26.8X-Xf26.8a-r+q-Xf26.8q-Zf6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf-26.8q-Yf26.8f2a-f-6Z-Zf6a-r+q-Yf-26.8q-Zf6f2a-f-26.8X-Xf26.8a-r+q-Xf-26.8q-Zf6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf26.8q-Yf-26.8f2a-f-6Z-Zf6a-r+q-Yf26.8q-Zf-6f2a-f-26.8X-Xf26.8a-r+q-Xf26.8q-Zf-6f2a-f-26.8Y-Yf26.8am__f1-r+q-Xf-26.8q-Yf-26.8f2a-f-6Z-Zf6a-r+q-Yf-26.8q-Zf-6f2a-f-26.8X-Xf26.8a-r+q-Xf-26.8q-Zf-6f2a-f-26.8Y-Yf26.8niam__f1aa-f-28.8X-Xf28.8a-f-28.8Y-Yf28.8a-f0Z-Zf8m-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf13.9-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf27.8-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf0-Yf41.7-Zf0iiim-Xf0-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf13.9-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf27.8-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20m-Xf41.7-Yf0-Zf0iam__f1-r+q-Xf-20.85q-Yf-20.85f5.95a-f-7Z-Zf1am__f1-r+q-Xf-20.85q-Yf-20.85f1a-f-20Z-Zf20',float('-28.799999'),float('-28.799999'),float('-8.000000'),float('28.799999'),float('28.799999'),float('8.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1292.4584540936366,
                58.98750890728904
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 6
        }
    ],
    "protocol": 6,
    "type": "sb"
}
