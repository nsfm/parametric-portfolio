{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "18",
                    "name": "zmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "6.3/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "self.r+2",
                    "name": "R",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1-r+qXqYf5.15a-f0Z-Zf18nam__f1-r+qXqYf3.15a-f0Z-Zf18',float('-5.150000'),float('-5.150000'),float('0.000000'),float('5.150000'),float('5.150000'),float('18.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1284.1211224183287,
                -818.0177412446799
            ],
            "name": "tool",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Ring (Z)')",
                "",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('x', float)",
                "input('y', float)",
                "input('r', float)",
                "input('R', float)",
                "",
                "output('shape', fab.shapes.cylinder(x,y, zmin, zmax, R) & ~fab.shapes.cylinder(x, y, zmin, zmax,  r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmax), (x, y, zmax + r)])",
                "sb.ui.wireframe([(x, y,zmin), (x, y, zmin + R)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * R + x, ",
                "     math.sin(i/36. * 2*math.pi) * R + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x, y, zmin + R, drag=(None, None, R))",
                "sb.ui.point(x, y, zmax + r, drag=(None, None, r))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "tool.x+tool.R+self.width/2-1",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "tool.zmin+self.depth/2",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "6",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3.4",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "tool.zmax",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f4.15X-Xf10.15a-f-1.7Y-Yf1.7a-f0Z-Zf18',float('4.150000'),float('-1.700000'),float('0.000000'),float('10.150000'),float('1.700000'),float('18.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                894.3251858924464,
                -98.82039958970694
            ],
            "name": "arm",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "arm.x-1.1",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "arm.y-arm.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "tool.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "tool.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1.2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf6.05q-Yf-1.7f1.2a-f0Z-Zf18',float('4.850000'),float('-2.900000'),float('0.000000'),float('7.250000'),float('-0.500000'),float('18.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                476.2802307630956,
                424.4402056460239
            ],
            "name": "notch",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__0]",
                    "name": "x0",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1",
                    "name": "s",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__2.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m+f6.05/-Xf6.05f1Y_am__f1-r+q-Xf6.05q-Yf-1.7f1.2a-f0Z-Zf18',float('4.850000'),float('-2.900000'),float('0.000000'),float('7.250000'),float('-0.500000'),float('18.000000'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                893.0460071350822,
                490.25988091014756
            ],
            "name": "s0",
            "script": [
                "import fab",
                "",
                "title('Scale (X)')",
                "",
                "input('x0', float)",
                "input('_y', float)",
                "input('_z', float)",
                "input('s', float)",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_x(shape, x0, s))",
                "",
                "# UI",
                "kwargs = {'color':sb.color.teal}",
                "sb.ui.wireframe([(x0, _y + 0.2*s, _z), (x0, _y - 0.2*s, _z)], **kwargs)",
                "sb.ui.wireframe([(x0, _y, _z), (x0 + s, _y, _z)], **kwargs)",
                "sb.ui.wireframe([(x0 + 0.9*s, _y - 0.1*s, _z), (x0 + s, _y, _z),",
                "                  (x0 + 0.9*s, _y + 0.1*s, _z)], **kwargs)",
                "",
                "sb.ui.point(x0, _y, _z, **kwargs)",
                "sb.ui.point(x0 + s, _y, _z, color=sb.color.teal, drag=(s,None,None))",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__1.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__3.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam__f1aa-f4.15X-Xf10.15a-f-1.7Y-Yf1.7a-f0Z-Zf18nm+f6.05/-Xf6.05f1Y_am__f1-r+q-Xf6.05q-Yf-1.7f1.2a-f0Z-Zf18',float('4.150000'),float('-1.700000'),float('0.000000'),float('10.150000'),float('1.700000'),float('18.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1324.3119604668302,
                402.7861262249345
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__0.__6]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__10.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aaam__f1-r+qXqYf5.15a-f0Z-Zf18nam__f1-r+qXqYf3.15a-f0Z-Zf18nam__f1-r+q-Xf-3.15q-Yf4.575f5.15a-f0Z-Zf18',float('-5.150000'),float('-5.150000'),float('0.000000'),float('5.150000'),float('5.150000'),float('18.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1700.6525329497235,
                -253.26703391416336
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__2,__4.__2,__9.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('iiaaam__f1-r+qXqYf5.15a-f0Z-Zf18nam__f1-r+qXqYf3.15a-f0Z-Zf18nam__f1-r+q-Xf-3.15q-Yf4.575f5.15a-f0Z-Zf18aam__f1aa-f4.15X-Xf10.15a-f-1.7Y-Yf1.7a-f0Z-Zf18nm+f6.05/-Xf6.05f1Y_am__f1-r+q-Xf6.05q-Yf-1.7f1.2a-f0Z-Zf18mX+f1.7/-Yf1.7f0.5_am__f1-r+q-Xf7.15q-Yf1.7f1a-f0Z-Zf18',float('-5.150000'),float('-5.150000'),float('0.000000'),float('10.150000'),float('5.150000'),float('18.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                2086.400780770381,
                179.8967917908951
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "arm.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "arm.y+arm.height/2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "tool.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "tool.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf7.15q-Yf1.7f1a-f0Z-Zf18',float('6.150000'),float('0.700000'),float('0.000000'),float('8.150000'),float('2.700000'),float('18.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1218.9137651586473,
                876.5411616944862
            ],
            "name": "c0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "_x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__1]",
                    "name": "y0",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "0.5",
                    "name": "s",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__8.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('mX+f1.7/-Yf1.7f0.5_am__f1-r+q-Xf7.15q-Yf1.7f1a-f0Z-Zf18',float('6.150000'),float('1.200000'),float('0.000000'),float('8.150000'),float('2.200000'),float('18.000000'))",
                    "name": "scaled",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1589.8875197721486,
                904.3011025159046
            ],
            "name": "s1",
            "script": [
                "import fab",
                "",
                "title('Scale (Y)')",
                "",
                "input('_x', float)",
                "input('y0', float)",
                "input('_z', float)",
                "input('s', float)",
                "input('shape', fab.types.Shape)",
                "output('scaled', fab.shapes.scale_y(shape, y0, s))",
                "",
                "# UI",
                "kwargs = {'color':sb.color.teal}",
                "sb.ui.wireframe([(_x + 0.2*s, y0, _z), (_x - 0.2*s, y0, _z)], **kwargs)",
                "sb.ui.wireframe([(_x, y0, _z), (_x, y0 + s, _z)], **kwargs)",
                "sb.ui.wireframe([(_x - 0.1*s, y0 + 0.9*s, _z), (_x, y0 + s, _z),",
                "                  (_x + 0.1*s, y0 + 0.9*s, _z)], **kwargs)",
                "",
                "sb.ui.point(_x, y0, _z, color=sb.color.teal)",
                "sb.ui.point(_x, y0 + s, _z, color=sb.color.teal, drag=(None,s,None))",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "tool.x-self.r+2",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "tool.y+self.r/2+2",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "tool.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "tool.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "tool.R",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+q-Xf-3.15q-Yf4.575f5.15a-f0Z-Zf18',float('-8.300000'),float('-0.575000'),float('0.000000'),float('2.000000'),float('9.725000'),float('18.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1273.376976392597,
                -294.36656750686245
            ],
            "name": "flex_cut",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 10
        }
    ],
    "protocol": 6,
    "type": "sb"
}
