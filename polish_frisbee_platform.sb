{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "80",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "15.9/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf7.95a-f0Z-Zf80',float('-7.950000'),float('-7.950000'),float('0.000000'),float('7.950000'),float('7.950000'),float('80.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                692.9926440190794,
                2262.681432778666
            ],
            "name": "shaft",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "shaft.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+3",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "80/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf40a-f80Z-Zf83',float('-40.000000'),float('-40.000000'),float('80.000000'),float('40.000000'),float('40.000000'),float('83.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                701,
                135
            ],
            "name": "platform",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "platform.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "platform.r-self.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf80-r+q-f38r+qXqYqZf2',float('-40.000000'),float('-40.000000'),float('78.000000'),float('40.000000'),float('40.000000'),float('82.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                705,
                -299
            ],
            "name": "lip",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "platform.zmax",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "platform.r-self.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf83-r+q-f38r+qXqYqZf2',float('-40.000000'),float('-40.000000'),float('81.000000'),float('40.000000'),float('40.000000'),float('85.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                267.85454797414445,
                1473.5313817727017
            ],
            "name": "top_lip",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "platform.zmin",
                    "name": "z0",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.z0-30",
                    "name": "z1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "platform.r",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m__-*f2f80Zm+f0/*-Xf0f30+*f0-Zf80*f1-f110Z+f0/*-Yf0f30+*f0-Zf80*f1-f110Z_am__f1-r+qXqYf40a-f80Z-Zf110',float('-40.000004'),float('-40.000004'),float('50.000000'),float('40.000004'),float('40.000004'),float('80.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                711,
                533
            ],
            "name": "taper",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cone (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cone(x, y, z0, z1, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, z0)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x,y,z0), (x+r,y,z0)])",
                "sb.ui.wireframe([(x,y,z0), (x,y,z1)])",
                "",
                "sb.ui.point(x, y, z0)",
                "sb.ui.point(x, y, z1)",
                "sb.ui.point(x + r, y, z0, drag=(r, None, None))",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-27",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "platform.zmin",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "shaft.r+3",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf10.95a-f53Z-Zf80',float('-10.950000'),float('-10.950000'),float('53.000000'),float('10.950000'),float('10.950000'),float('80.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                705,
                988
            ],
            "name": "grip",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "grip.zmin",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "grip.r-self.r",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3/2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf53-r+q-f9.45r+qXqYqZf1.5',float('-10.950000'),float('-10.950000'),float('51.500000'),float('10.950000'),float('10.950000'),float('54.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                260.8565404676493,
                1079.265383889801
            ],
            "name": "bottom_lip",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__6.__5,__5.__5,__4.__5,__1.__5,__2.__5,__11.__4,__3.__5,__12.__5,__16.__2,__17.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__8.__5,__0.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiim-Xf0-Yf0-Zf53-r+q-f9.45r+qXqYqZf1.5am__f1-r+qXqYf10.95a-f53Z-Zf80m__-*f2f80Zm+f0/*-Xf0f30+*f0-Zf80*f1-f110Z+f0/*-Yf0f30+*f0-Zf80*f1-f110Z_am__f1-r+qXqYf40a-f80Z-Zf110am__f1-r+qXqYf40a-f80Z-Zf83m-Xf0-Yf0-Zf80-r+q-f38r+qXqYqZf2iiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f0.5X*f0.866025Y+*f-0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f0.5X*f-0.866025Y+*f0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf83-r+q-f38r+qXqYqZf2am__f1-r+qXqYf38a-f83Z-Zf83am-Xf0-Yf0-Zf82.25-r+q-f36.6r+qXqYqZf2nm-Xf0-Yf0-Zf85-r+q-f34.6r+qXqYqZf2am__f1-r+qXqYf38a-f78Z-Zf80niam__f1-r+qXqYf2a-f0Z-Zf83am__f1-r+qXqYf7.95a-f0Z-Zf80',float('-40.000004'),float('-40.000004'),float('50.000000'),float('40.000004'),float('40.000004'),float('85.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                1553.0155576943855,
                1517.0036027333563
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "shaft.zmin",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "real_platform.zmax",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf2a-f0Z-Zf83',float('-2.000000'),float('-2.000000'),float('0.000000'),float('2.000000'),float('2.000000'),float('83.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1053.3496826101045,
                2580.8567722070943
            ],
            "name": "air",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 8
        },
        {
            "datums": [
                {
                    "expr": "grip.r",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "taper.z1+12.5",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "7",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "3",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "20",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5',float('7.450000'),float('-1.500000'),float('52.500000'),float('14.450000'),float('1.500000'),float('72.500000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                1416.4702284671498,
                297.09862842849094
            ],
            "name": "c0",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 9
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__9.__0]",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "_y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0011[__9.__2]",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "-25",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__9.__6]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5',float('3.551742'),float('-1.500000'),float('51.957756'),float('18.348259'),float('1.500000'),float('73.042244'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1736.0763287462837,
                342.11357212977765
            ],
            "name": "r0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Y)')",
                "",
                "input('x', float)",
                "input('_y', float)",
                "input('z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_y(shape, a, x, z))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), _y, z + math.sin(rad)),",
                "                  (x, _y, z),",
                "                  (x + 1, _y, z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3, _y,",
                "         z + math.sin(math.radians(a_)) * 0.3)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, _y, z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(z - this.z, x - this.x))",
                "sb.ui.point(x + math.cos(rad), _y, z + math.sin(rad),",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__10.__5]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "6",
                    "name": "n",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f0.5X*f0.866025Y+*f-0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f0.5X*f-0.866025Y+*f0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5',float('-18.348259'),float('-16.640051'),float('51.957756'),float('18.348259'),float('16.640051'),float('73.042244'))",
                    "name": "array",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                2112.701357713715,
                334.6110815128966
            ],
            "name": "a0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Array (polar)')",
                "",
                "input('shape', fab.types.Shape)",
                "input('x', float)",
                "input('y', float)",
                "input('n', int)",
                "",
                "output('array', fab.shapes.iterate_polar(shape, x, y, n))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * 0.3 + x,",
                "     math.sin(i/36. * 2*math.pi) * 0.3 + y, 0)",
                "    for i in range(36)], close=True, color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, 0, color=sb.color.teal)",
                ""
            ],
            "uid": 11
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "platform.zmax",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "self.zmin+top_lip.r-2",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "top_lip.R",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf38a-f83Z-Zf83',float('-38.000000'),float('-38.000000'),float('83.000000'),float('38.000000'),float('38.000000'),float('83.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                708.2351142335748,
                1551.5150595710093
            ],
            "name": "real_platform",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 12
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0012fab.types.Shape('aiiiiiiiiim-Xf0-Yf0-Zf53-r+q-f9.45r+qXqYqZf1.5am__f1-r+qXqYf10.95a-f53Z-Zf80m__-*f2f80Zm+f0/*-Xf0f30+*f0-Zf80*f1-f110Z+f0/*-Yf0f30+*f0-Zf80*f1-f110Z_am__f1-r+qXqYf40a-f80Z-Zf110am__f1-r+qXqYf40a-f80Z-Zf83m-Xf0-Yf0-Zf80-r+q-f38r+qXqYqZf2iiiiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f0.5X*f0.866025Y+*f-0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-0.5X*f0.866025Y+*f-0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f-0.5X*f-0.866025Y+*f0.866025X*f-0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf0m+*f0.5X*f-0.866025Y+*f0.866025X*f0.5Y_m-Xf-0-Yf-0-Zf0m-Xf10.95-Yf0-Zf62.5m+*f0.906308X*f-0.422618ZY+*f0.422618X*f0.906308Zm-Xf-10.95-Yf0-Zf-62.5am__f1aa-f7.45X-Xf14.45a-f-1.5Y-Yf1.5a-f52.5Z-Zf72.5m-Xf0-Yf0-Zf83-r+q-f38r+qXqYqZf2am__f1-r+qXqYf38a-f83Z-Zf83am-Xf0-Yf0-Zf82.25-r+q-f36.6r+qXqYqZf2nm-Xf0-Yf0-Zf85-r+q-f34.6r+qXqYqZf2am__f1-r+qXqYf38a-f78Z-Zf80niam__f1-r+qXqYf2a-f0Z-Zf83am__f1-r+qXqYf7.95a-f0Z-Zf80',float('-40.000004'),float('-40.000004'),float('50.000000'),float('40.000004'),float('40.000004'),float('85.000000'))",
                    "name": "out",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                1974.6555303631026,
                1520.0045989801085
            ],
            "name": "m0",
            "script": [
                "import fab",
                "",
                "title('Mesh (.stl)')",
                "",
                "input('shape', fab.types.Shape)",
                "output('out', shape)",
                "",
                "sb.export.stl(shape)",
                ""
            ],
            "uid": 13
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "top_lip.z-.75",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "top_lip.R-top_lip.r+.6",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf82.25-r+q-f36.6r+qXqYqZf2',float('-38.599998'),float('-38.599998'),float('80.250000'),float('38.599998'),float('38.599998'),float('84.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -168.97898229313603,
                398.5230560694095
            ],
            "name": "top_fillet",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 14
        },
        {
            "datums": [
                {
                    "expr": "0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "top_fillet.z+2.75",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "top_fillet.R-2",
                    "name": "R",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "2",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0-Yf0-Zf85-r+q-f34.6r+qXqYqZf2',float('-36.599998'),float('-36.599998'),float('83.000000'),float('36.599998'),float('36.599998'),float('87.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                -202.63855231495688,
                859.6719462948918
            ],
            "name": "top_fillet0",
            "script": [
                "# Neil Gershenfeld 1/25/15",
                "# Matt Keeter 5/31/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Torus (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('R', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.torus_z(x, y, z, R, r))",
                "",
                "# UI",
                "sb.ui.wireframe([",
                "     (x,",
                "      math.sin(i/36. * 2*math.pi) * r + y + R,",
                "      math.cos(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([",
                "     (math.sin(i/36. * 2*math.pi) * R + x,",
                "      math.cos(i/36. * 2*math.pi) * R + y,",
                "      z)",
                "    for i in range(36)], close=True)",
                "sb.ui.wireframe([(x, y, z), (x, y, z + R + r)])",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x, y + R, z, drag=(None, R, None))",
                "sb.ui.point(x, y + R + r, z, drag=(None, r, None))",
                "",
                ""
            ],
            "uid": 15
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__14.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__15.__5]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('am-Xf0-Yf0-Zf82.25-r+q-f36.6r+qXqYqZf2nm-Xf0-Yf0-Zf85-r+q-f34.6r+qXqYqZf2',float('-38.599998'),float('-38.599998'),float('80.250000'),float('38.599998'),float('38.599998'),float('84.250000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                219.83423968815492,
                702.2525320875937
            ],
            "name": "d1",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 16
        },
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "self.zmax-lip.r",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "lip.z",
                    "name": "zmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "lip.R",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1-r+qXqYf38a-f78Z-Zf80',float('-38.000000'),float('-38.000000'),float('78.000000'),float('38.000000'),float('38.000000'),float('80.000000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                1294.0211448134132,
                813.7658745733835
            ],
            "name": "under_platform",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('zmin', float)",
                "input('zmax', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder(x, y, zmin, zmax, r))",
                "",
                "# UI",
                "sb.ui.wireframe([(x, y, zmin), (x, y, zmax)])",
                "sb.ui.wireframe([(x, y, zmin), (x+r, y, zmin)])",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmin)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (math.cos(i/36. * 2*math.pi) * r + x,",
                "     math.sin(i/36. * 2*math.pi) * r + y, zmax)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(x, y, zmin)",
                "sb.ui.point(x, y, zmax)",
                "sb.ui.point(x + r, y, zmin, drag=(r, None, None))",
                ""
            ],
            "uid": 17
        }
    ],
    "protocol": 6,
    "type": "sb"
}
